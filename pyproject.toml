# Not sure it is useful, but to generate automated docs:
# poetry run python -m typer ptx_formatter utils docs --output generatedDocs.md --name ptx-format

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "ptx-formatter"
version = "0.1.0"
description = ""
authors = [
    {name = "Haris Skiadas", email = "cskiadas@gmail.com"},
    {name = "Barb Wahl", email = "barb.wahl.1960@gmail.com"},
]
dependencies = [
    "typer[all]<1.0.0,>=0.12.3",
]
requires-python = "<4.0,>=3.12"
readme = "README.md"
license = {text = "MIT"}

[project.scripts]
ptx-format = "ptx_formatter:main"

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "pytest<9.0.0,>=8.3.1",
    "pytest-html<5.0.0,>=4.1.1",
    "pytest-clarity<2.0.0,>=1.0.1",
    "yapf<1.0.0,>=0.40.2",
    "pdoc>=14.6.0",
]

[tool.pdm.build]
includes = ["ptx_formatter/"]

[tool.pdm.scripts]
test = "pytest"
lint.cmd = "yapf -ri ptx_formatter tests"
lint.help = "lint in-place"
lint-diff.cmd = "yapf -rd ptx_formatter tests"
lint-diff.help = "error if lint produces diffs"
doc = "pdoc -n -d google -o docs --no-include-undocumented ptx_formatter"
doc-serve = "pdoc -n -d google  --no-include-undocumented ptx_formatter"

[tool.yapf]
based_on_style = "google"
indent_width = 2

[tool.pytest.ini_options]
addopts="--html=reports/tests/index.html"
